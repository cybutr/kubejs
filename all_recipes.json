{
  "server_scripts\\recipes\\alumina_crystal.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_alumina_crystal')\n    event.recipes.create.sequenced_assembly('kubejs:alumina_crystal', 'minecraft:quartz',\n        [event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:crystalline_acid', 125)]),\n        event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:glow_solution', 75)]),\n        event.recipes.createFilling(inter, [inter, Fluid.of('sliceanddice:fertilizer', 100)])]).transitionalItem(inter).loops(2).id('kubejs:sequence/alumina_shard')\n})",
  "server_scripts\\recipes\\asurine.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(\n        Item.of('create:asurine', 1),\n        [Fluid.of('kubejs:nitrogen', 300), Fluid.of('tconstruct:molten_zinc', 40), Item.of('minecraft:stone')])\n        .secondaryFluidInput(0).processingTime(100).id('kubejs:pressurizing/asurine')\n})",
  "server_scripts\\recipes\\asurine_shard.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_asurine_shard')\n    event.recipes.create.sequenced_assembly([Item.of('kubejs:asurine_shard', 3).withChance(0.75), Item.of('kubejs:asurine_shard', 2).withChance(0.20), Item.of('minecraft:light_blue_dye', 1).withChance(0.05)],\n    Item.of('kubejs:obsidian_alloy'),\n        [event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:crystalline_acid', 150)]),\n        event.recipes.createCutting(inter, inter),\n        event.recipes.createDeploying(inter, [inter, 'minecraft:quartz']),\n        event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:zinc_solution', 250)]),\n        event.recipes.createPressing(inter, inter)]\n    ).transitionalItem(inter).loops(1).id('kubejs:sequence/asurine_shard')\n})",
  "server_scripts\\recipes\\bauxite.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_bauxite')\n    event.recipes.create.sequenced_assembly(Item.of('tfmg:bauxite', 1), 'kubejs:alumina_crystal',\n        [event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:bauxite_slurry', 90)]),\n        event.recipes.createDeploying(inter, [inter, 'minecraft:redstone'])]).transitionalItem(inter).loops(3).id('kubejs:sequence/bauxite')\n})",
  "server_scripts\\recipes\\bauxite_shard.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_bauxite_shard')\n    event.recipes.create.sequenced_assembly([Item.of('kubejs:bauxite_shard', 2).withChance(0.80), Item.of('kubejs:bauxite_shard', 3).withChance(0.20)],\n    Item.of('kubejs:obsidian_alloy'),\n        [event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:caustic_solution', 125)]),\n        event.recipes.createCutting(inter, inter),\n        event.recipes.createFilling(inter, [inter, Fluid.of('sliceanddice:fertilizer', 100)])]).transitionalItem(inter).loops(2).id('kubejs:sequence/bauxite_shard')\n})",
  "server_scripts\\recipes\\bauxite_slurry.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n        Fluid.of('kubejs:bauxite_slurry', 850),\n        [Item.of('kubejs:bauxite_shard', 2), Fluid.of('kubejs:caustic_solution', 175), Fluid.water(200)]\n    ).heated().id('kubejs:mixing/bauxite_slurry')\n})",
  "server_scripts\\recipes\\calcite.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(\"minecraft:calcite\", [ \"kubejs:calcite_catalyst\", Fluid.water(1000)]).heated()\n})",
  "server_scripts\\recipes\\calcite_catalyst.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:limestone_shard')\n    event.recipes.create.sequenced_assembly(Item.of('kubejs:calcite_catalyst'), Item.of('kubejs:limestone_shard'),\n        [event.recipes.createPressing(inter, inter),\n        event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:liquid_garnish', 200)]),\n        event.recipes.createFilling(inter, [inter, Fluid.water(180)])]\n    ).transitionalItem(inter).loops(2).id('kubejs:sequence/calcite_catalyst')\n})",
  "server_scripts\\recipes\\caustic_solution.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(Fluid.of('kubejs:caustic_solution', 375),\n    [Fluid.water(250), Fluid.of('kubejs:molten_redstone', 125), 'minecraft:blaze_powder']).id('kubejs:mixing/caustic_solution')\n})",
  "server_scripts\\recipes\\copper_sulfate.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(Item.of('tfmg:copper_sulfate'),\n    [Item.of('minecraft:copper_ingot'), Fluid.of('tfmg:sulfuric_acid', 200), Fluid.water(200)]).id('kubejs:pressurizing/copper_sulfate')\n})",
  "server_scripts\\recipes\\crystalline_acid.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n    Fluid.of('kubejs:crystalline_acid', 450),\n    [Item.of('minecraft:glowstone_dust', 2), Item.of('minecraft:redstone', 1), Fluid.of('tfmg:sulfuric_acid', 200)]).id('kubejs:mixing/crystalline_acid')\n})",
  "server_scripts\\recipes\\deeepslate_alloy.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:deepslate_alloy')\n    event.recipes.create.sequenced_assembly(\n        Item.of('kubejs:deepslate_alloy'),\n        Item.of('create:andesite_alloy'),\n        [event.recipes.createPressing(inter, inter),\n        event.recipes.createDeploying(inter, [inter, Item.of('kubejs:crushed_deepslate')]),\n        event.recipes.createDeploying(inter, [inter, Item.of('kubejs:crushed_deepslate')])])\n        .transitionalItem(inter).loops(1).id('kubejs:sequence/deepslate_alloy')\n})",
  "server_scripts\\recipes\\drawers.js": "ServerEvents.recipes(event => {\n    let FC = (id) => { return Item.of('functionalstorage:' + id) }\n    event.shaped(\n        Item.of(FC('fluid_1'), 1),\n        [\n            'AAA',\n            'ABA',\n            'AAA'\n        ],\n        {\n            A: '#minecraft:planks',\n            B: 'create:fluid_tank',\n        }\n    ).id('kubejs:shaped/fluid_1')\n    event.shaped(\n        Item.of(FC('fluid_2'), 1),\n        [\n            'ABA',\n            'AAA',\n            'ABA'\n        ],\n        {\n            A: '#minecraft:planks',\n            B: 'create:fluid_tank',\n        }\n    ).id('kubejs:shaped/fluid_2')\n    event.shaped(\n        Item.of(FC('fluid_4'), 1),\n        [\n            'BAB',\n            'AAA',\n            'BAB'\n        ],\n        {\n            A: '#minecraft:planks',\n            B: 'create:fluid_tank',\n        }\n    ).id('kubejs:shaped/fluid_4')\n    event.shaped(\n        Item.of(FC('compacting_drawer'), 1),\n        [\n            'AAA',\n            'BCB',\n            'ADA'\n        ],\n        {\n            A: 'minecraft:stone',\n            B: 'create:mechanical_press',\n            C: '#functionalstorage:drawer',\n            D: 'vintageimprovements:aluminum_spring'\n        }\n    ).id('kubejs:shaped/compacting_drawer')\n    event.shaped(\n        Item.of(FC('controller_extension'), 1),\n        [\n            'ABA',\n            'DCD',\n            'AEA'\n        ],\n        {\n            A: '#forge:stone',\n            B: 'minecraft:quartz_block',\n            C: 'kubejs:brass_machine',\n            D: '#functionalstorage:drawer',\n            E: 'create:linked_controller'\n        }\n    ).id('kubejs:shaped/controller_extension')\n    event.shaped(\n        Item.of(FC('storage_controller'), 1),\n        [\n            'ABA',\n            'DCD',\n            'AEA'\n        ],\n        {\n            A: '#forge:stone',\n            B: 'minecraft:quartz_block',\n            C: '#functionalstorage:drawer',\n            D: 'kubejs:brass_machine',\n            E: 'create:linked_controller'\n        }\n    ).id('kubejs:shaped/storage_controller')\n    event.shaped(\n        Item.of(FC('simple_compacting_drawer'), 1),\n        [\n            'AAA',\n            'ABC',\n            'ADA'\n        ],\n        {\n            A: 'minecraft:stone',\n            B: '#functionalstorage:drawer',\n            C: 'create:mechanical_press',\n            D: 'vintageimprovements:aluminum_spring',\n        }\n    ).id('kubejs:shaped/simple_compacting_drawer')\n    // Framed\n    event.shaped(\n        Item.of(FC('framed_simple_compacting_drawer'), 1),\n        [\n            'AAA',\n            'ABC',\n            'ADA'\n        ],\n        {\n            A: 'minecraft:iron_nugget',\n            B: '#functionalstorage:drawer',\n            C: 'create:mechanical_press',\n            D: 'vintageimprovements:aluminum_spring',\n        }\n    ).id('kubejs:shaped/framed_simple_compacting_drawer')\n    event.shaped(\n        Item.of(FC('compacting_framed_drawer'), 1),\n        [\n            'AAA',\n            'BCB',\n            'ADA'\n        ],\n        {\n            A: 'minecraft:iron_nugget',\n            B: 'create:mechanical_press',\n            C: '#functionalstorage:drawer',\n            D: 'vintageimprovements:aluminum_spring'\n        }\n    ).id('kubejs:shaped/compacting_framed_drawer')\n    event.shaped(\n        Item.of(FC('framed_storage_controller'), 1),\n        [\n            'ABA',\n            'DCD',\n            'AEA'\n        ],\n        {\n            A: 'minecraft:iron_nugget',\n            B: 'minecraft:quartz_block',\n            C: '#functionalstorage:drawer',\n            D: 'kubejs:brass_machine',\n            E: 'create:linked_controller'\n        }\n    ).id('kubejs:shaped/framed_storage_controller')\n    event.shaped(\n        Item.of(FC('framed_controller_extension'), 1),\n        [\n            'ABA',\n            'DCD',\n            'AEA'\n        ],\n        {\n            A: 'minecraft:iron_nugget',\n            B: 'minecraft:quartz_block',\n            C: 'kubejs:brass_machine',\n            D: '#functionalstorage:drawer',\n            E: 'create:linked_controller'\n        }\n    ).id('kubejs:shaped/framed_controller_extension')\n    event.shaped(\n        Item.of(FC('linking_tool'), 1),\n        [\n            'AAB',\n            'ACB',\n            'ADE'\n        ],\n        {\n            A: 'minecraft:paper',\n            B: 'create:brass_ingot',\n            C: 'kubejs:brass_machine',\n            D: 'minecraft:netherite_ingot',\n            E: 'create:linked_controller'\n        }\n    ).id('kubejs:shaped/linking_tool')\n    event.shaped(\n        Item.of(FC('configuration_tool'), 1),\n        [\n            'AAB',\n            'ACB',\n            'ADE'\n        ],\n        {\n            A: 'minecraft:paper',\n            B: 'tfmg:aluminum_ingot',\n            C: 'kubejs:copper_machine',\n            D: 'minecraft:emerald',\n            E: '#forge:screwdrivers'\n        }\n    ).id('kubejs:shaped/configuration_tool')\n})",
  "server_scripts\\recipes\\electron_tube.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:empty_tube')\n    event.recipes.create.sequenced_assembly('create:electron_tube', 'kubejs:empty_tube',\n        [event.recipes.createDeploying(inter, [inter, 'create:polished_rose_quartz']),\n        event.recipes.createPressing(inter, inter)]).transitionalItem(inter).loops(1).id('kubejs:sequence/electron_tube')\n})",
  "server_scripts\\recipes\\empty_tube.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('minecraft:glass_bottle')\n    event.recipes.create.sequenced_assembly(\n        Item.of('kubejs:empty_tube', 2),\n        Item.of('minecraft:glass_bottle'),\n        [event.recipes.createFilling(inter, [inter, Fluid.of('tconstruct:molten_iron', 180)]),\n        event.recipes.createCutting(inter, inter),\n        event.recipes.createPressing(inter, inter)])\n        .transitionalItem(inter).loops(1).id('kubejs:sequence/empty_tube')\n})",
  "server_scripts\\recipes\\enriched_water.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(Fluid.of('kubejs:enriched_water', 200), [Fluid.of('kubejs:purified_water', 300), Fluid.of('create:honey', 125), Item.of('minecraft:redstone', 3)]).heated().id('kubejs:mixing/enriched_water')\n})",
  "server_scripts\\recipes\\glow_solution.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n    Fluid.of('kubejs:glow_solution', 350),\n    [Fluid.of('create:honey', 150), Item.of('minecraft:glow_berries', 3)]).heated().id('kubejs:mixing/glow_solution')\n})",
  "server_scripts\\recipes\\gold_solution.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n    Fluid.of('kubejs:gold_solution', 240),\n    [Fluid.of('create:honey', 120), Fluid.of('kubejs:crystalline_acid', 200), Item.of('minecraft:gold_nugget', 6)]).heated().id('kubejs:mixing/gold_solution')\n})",
  "server_scripts\\recipes\\lapis_lazuli.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:lapis_lazuli_catalyst')\n    event.recipes.create.sequenced_assembly([\n        Item.of('minecraft:lapis_lazuli', 2).withChance(0.95),\n        Item.of('minecraft:blue_dye', 2).withChance(0.05)\n    ], Item.of('kubejs:lapis_lazuli_catalyst'), [\n        event.recipes.createCutting(inter, inter),\n        event.recipes.createDeploying(inter, [inter, 'minecraft:quartz']),\n        event.recipes.createFilling(inter, [inter, Fluid.of('minecraft:water', 350)]),\n        event.recipes.createPressing(inter, inter)\n    ]).transitionalItem(inter).loops(1).id('kubejs:sequence/lapis_lazuli')\n})",
  "server_scripts\\recipes\\lapis_lazuli_catalyst.js": "ServerEvents.recipes(event => {\n    let inter = 'incomplete_lapis_lazuli_catalyst'\n    event.recipes.create.sequenced_assembly([\n        Item.of('kubejs:lapis_lazuli_catalyst', 4).withChance(0.75),\n        Item.of('kubejs:lapis_lazuli_catalyst', 3).withChance(0.25)\n    ], 'minecraft:stone', [\n        event.recipes.createDeploying(Item.of(inter), [Item.of(inter), 'minecraft:blue_dye']),\n        event.recipes.createFilling(Item.of(inter), [Item.of(inter), Fluid.of(\"lava\", 200)]),\n        event.recipes.createCutting(Item.of(inter), Item.of(inter)),\n        event.recipes.createPressing(Item.of(inter), Item.of(inter))\n    ]).transitionalItem(Item.of(inter)).loops(2).id('kubejs:sequence/lapis_lazuli_catalyst')\n})",
  "server_scripts\\recipes\\luquid_garnish.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(Fluid.of('kubejs:liquid_garnish', 400), [\n        'minecraft:sugar',\n        '#forge:seeds',\n        Fluid.water(250)\n    ]).heated().id('kubejs:mixing/luquid_garnish')\n})",
  "server_scripts\\recipes\\molten_zinc.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(\n        Fluid.of('tconstruct:molten_zinc', 350),\n        [Fluid.of('kubejs:purified_water', 850), Item.of('kubejs:asurine_shard'), Fluid.lava(200)])\n        .secondaryFluidInput(0).processingTime(400).heated().id('kubejs:pressurizing/molten_zinc')\n})",
  "server_scripts\\recipes\\netherrack.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_netherrack')\n    event.recipes.create.sequenced_assembly('minecraft:netherrack', 'minecraft:cobblestone',\n        [event.recipes.createDeploying(inter, [inter, 'minecraft:nether_wart']),\n        event.recipes.createFilling(inter, [inter, Fluid.of('sliceanddice:fertilizer', 60)]),\n        event.recipes.createFilling(inter, [inter, Fluid.of('minecraft:lava', 125)])]\n    ).transitionalItem(inter).loops(1).id('kubejs:sequence/netherrack')\n})",
  "server_scripts\\recipes\\nitrogen.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n    Fluid.of('kubejs:nitrogen', 200),\n    [Fluid.of('minecraft:water', 1000), Fluid.of('tfmg:cooling_fluid', 250)]).id('kubejs:mixing/nitrogen')\n})",
  "server_scripts\\recipes\\obsidian_alloy.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(\n        [Fluid.of('tconstruct:molten_refined_obsidian', 100), Item.of('kubejs:obsidian_alloy', 1)],\n        [Fluid.of('tconstruct:molten_obsidian', 600), Item.of('kubejs:sturdy_shards'), Item.of('create:powdered_obsidian'), 'kubejs:deepslate_alloy'])\n        .secondaryFluidInput(0).secondaryFluidOutput(1).processingTime(300).heated().id('kubejs:pressurizing/obsidian_alloy')\n})",
  "server_scripts\\recipes\\ochrum.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n    Item.of('create:ochrum', 4),\n    [Fluid.of('kubejs:enriched_water', 450), Item.of('minecraft:stone', 4), Item.of('kubejs:ochrum_shard', 1)]).id('kubejs:mixing/ochrum')\n})",
  "server_scripts\\recipes\\ochrum_shard.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_ochrum_shard')\n    event.recipes.create.sequenced_assembly([Item.of('kubejs:ochrum_shard', 3).withChance(0.75), Item.of('kubejs:ochrum_shard', 2).withChance(0.20), Item.of('minecraft:yellow_dye', 1).withChance(0.05)],\n    Item.of('kubejs:obsidian_alloy'),\n        [event.recipes.createDeploying(inter, [inter, Item.of('minecraft:gold_nugget')]),\n        event.recipes.createFilling(inter, [inter, Fluid.of('tfmg:molten_slag', 50)]),\n        event.recipes.createCutting(inter, inter),\n        event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:gold_solution', 150)]),\n        event.recipes.createFilling(inter, [inter, Fluid.lava(250)])]\n    ).transitionalItem(inter).loops(1).id('kubejs:sequence/ochrum_shard')\n})",
  "server_scripts\\recipes\\purified_water.js": "ServerEvents.recipes(event => {\n    event.recipes.tfmg.distillation(Fluid.of(\"minecraft:water\", 1000),\n    [Fluid.of(\"minecraft:water\", 875), Fluid.of(\"kubejs:purified_water\", 125)]).id(\"kubejs:distillation/purified_water\")\n\n    event.recipes.vintageimprovements.vacuumizing([Fluid.water(145), Fluid.of(\"kubejs:purified_water\", 15)], Fluid.water(150)).processingTime(80).id(\"kubejs:vacuumizing/purified_water\")\n})",
  "server_scripts\\recipes\\sturdy_shards.js": "ServerEvents.recipes(event => {\n    event.recipes.create.crushing(\n        [Item.of('kubejs:sturdy_shards', 2), Item.of('kubejs:sturdy_shards').withChance(0.5)],\n        Item.of('create:sturdy_sheet')\n    ).processingTime(200).id('kubejs:crushing/sturdy_shard')\n})",
  "server_scripts\\recipes\\sulfur.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(Item.of('vintageimprovements:sulfur'),\n    [Fluid.of('kubejs:purified_water', 80), Item.of('kubejs:sulfuric_crystal'), Fluid.lava(200)]).secondaryFluidInput(0).processingTime(320).id('kubejs:pressurizing/sulfur')\n})",
  "server_scripts\\recipes\\sulfuric_acid.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(\n        Fluid.of('tfmg:sulfuric_acid', 1000),\n        [Fluid.water(1000), Item.of('tfmg:nitrate_dust'), Fluid.of('vintageimprovements:sulfur_trioxide', 1000)])\n        .secondaryFluidInput(0).secondaryFluidOutput(1).processingTime(300).heated().id('kubejs:pressurizing/sulfuric_acid')\n})",
  "server_scripts\\recipes\\sulfuric_crystal.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('kubejs:incomplete_sulfuric_crystal')\n    event.recipes.create.sequenced_assembly(\n        [Item.of('kubejs:sulfuric_crystal', 2).withChance(0.90), Item.of('kubejs:sulfuric_crystal', 1).withChance(0.10)],\n        Item.of('kubejs:obsidian_alloy'),\n        [event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:volcanic_acid', 175)]),\n        event.recipes.createFilling(inter, [inter, Fluid.of('kubejs:sulfuric_solution', 250)]),\n        event.recipes.createCutting(inter, inter),\n        event.recipes.createDeploying(inter, [inter, 'minecraft:quartz']),\n        event.recipes.createPressing(inter, inter)])\n    .transitionalItem(inter).loops(1).id('kubejs:sequence/sulfuric_crystal')\n})",
  "server_scripts\\recipes\\sulfuric_solution.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.vacuumizing([Fluid.of('kubejs:sulfuric_solution', 300)],\n    [Item.of('tfmg:sulfur_dust', 1), Fluid.lava(200), Fluid.of('kubejs:glow_solution', 75)])\n    .processingTime(250).secondaryFluidOutput(0).id('kubejs:vacuumizing/sulfuric_solution')\n})",
  "server_scripts\\recipes\\tree_fertilizer.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing([\"create:tree_fertilizer\"], [\"#minecraft:saplings\", Fluid.of(\"tconstruct:earth_slime\", 250)]).id(\"kubejs:mixing/tree_fertilizer\")\n    \n})",
  "server_scripts\\recipes\\volcanic_acid.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n        Fluid.of('kubejs:volcanic_acid', 750),\n        [Fluid.lava(350), Item.of('minecraft:blaze_powder', 2)])\n    .id('kubejs:mixing/volcanic_acid')\n})",
  "server_scripts\\recipes\\zinc_solution.js": "ServerEvents.recipes(event => {\n    event.recipes.create.mixing(\n    Fluid.of('kubejs:zinc_solution', 200),\n    [Fluid.of('kubejs:crystalline_acid', 100), Item.of('create:zinc_nugget', 6)]).heated().id('kubejs:mixing/zinc_solution')\n})",
  "server_scripts\\recipes\\zinc_sulfate.js": "ServerEvents.recipes(event => {\n    event.recipes.vintageimprovements.pressurizing(Item.of('tfmg:zinc_sulfate'),\n    [Item.of('create:zinc_ingot'), Fluid.of('tfmg:sulfuric_acid', 200), Fluid.water(200)]).id('kubejs:pressurizing/zinc_sulfate')\n})",
  "server_scripts\\recipes\\andesiteAge\\andesite_machine.js": "ServerEvents.recipes(event => {\n    let inter = 'kubejs:andesite_machine'\n    let inter2 = 'create:andesite_casing'\n    event.recipes.create.sequenced_assembly(\n        Item.of('kubejs:andesite_machine', 2),\n        Item.of('create:andesite_casing'),\n        [event.recipes.createDeploying(inter2, [inter2, '#kubejs:anuggets']),\n        event.recipes.createDeploying(inter2, [inter2, '#kubejs:anuggets']),\n        event.recipes.createDeploying(inter2, [inter2, 'create:cogwheel']),\n        event.recipes.createDeploying(inter, [inter, '#forge:saws']),\n        event.recipes.createPressing(inter, inter)])\n    .transitionalItem(inter2).loops(1).id('kubejs:sequence/andesite_machine')\n})",
  "server_scripts\\recipes\\andesiteAge\\machines.js": "ServerEvents.recipes(event => {\n    let sc = (output, input, amount) => {\n        event.stonecutting(Item.of(output, amount), input).id(`kubejs:stonecutting/${output.split(':')[1]}`)\n    }\n    let sm = (output, input, template, upgradeItem) => {\n        event.smithing(output, template, input, upgradeItem).id(`kubejs:smithing/${output.split(':')[1]}`)\n    }\n    let c = 'kubejs:andesite_machine'\n    let w = 'create:wrench'\n    sc('create:andesite_funnel', c, 3)\n    sc('create:andesite_tunnel', c, 3)\n    sc('create:gearbox', c, 2)\n    sc('create:vertical_gearbox', c, 2)\n    sc('create:portable_storage_interface', c, 2)\n    sm('create:encased_fan', c, w, 'create:propeller')\n    sm('create:mechanical_press', c, w, 'minecraft:iron_block')\n    sm('create:mechanical_mixer', c, w, 'create:whisk')\n    sm('create:rope_pulley', c, w, 'farmersdelight:rope')\n    sm('create:mechanical_drill', c, w, 'kubejs:drill_head')\n    sm('create:mechanical_saw', c, w, 'kubejs:saw_blade')\n\n    event.shaped(\n        Item.of('create:large_water_wheel', 1),\n        [\n            'AAA',\n            'ABA',\n            'AAA'\n        ],\n        {\n            A: '#minecraft:planks',\n            B: 'kubejs:andesite_machine',\n        }\n    ).id('kubejs:shaped/large_water_wheel')\n\n    event.shaped(\n        Item.of('create:millstone', 1),\n        [\n            ' A ',\n            ' B ',\n            ' C '\n        ],\n        {\n            A: 'create:cogwheel',\n            B: 'kubejs:andesite_machine',\n            C: '#forge:stone'\n        }\n    ).id('kubejs:shaped/millstone')\n\n    event.shaped(\n        Item.of('create:mechanical_bearing', 1),\n        [\n            ' A ',\n            ' B ',\n            ' C '\n        ],\n        {\n            A: '#minecraft:wooden_slabs',\n            C: 'create:shaft',\n            B: c\n        }\n    ).id('kubejs:shaped/mechanical_bearing')\n\n    event.shaped(\n        Item.of('create:windmill_bearing', 1),\n        [\n            ' A ',\n            ' B ',\n            ' C '\n        ],\n        {\n            A: '#minecraft:wooden_slabs',\n            C: c,\n            B: '#forge:stone'\n        }\n    ).id('kubejs:shaped/windmill_bearing')\n\n    event.shaped(\n        Item.of('create:cuckoo_clock', 1),\n        [\n            ' A ',\n            ' B ',\n            ' C '\n        ],\n        {\n            A: '#minecraft:planks',\n            B: c,\n            C: 'minecraft:clock'\n        }\n    ).id('kubejs:shaped/cuckoo_clock')\n\n    event.shaped(\n        Item.of('create:gantry_carriage', 1),\n        [\n            ' A ',\n            ' B ',\n            ' C '\n        ],\n        {\n            A: '#minecraft:wooden_slabs',\n            B: 'kubejs:andesite_machine',\n            C: 'create:cogwheel'\n        }\n    ).id('kubejs:shaped/gantry_carriage')\n\n    event.shaped(\n        Item.of('create:mechanical_piston', 1),\n        [\n            ' A ',\n            ' B ',\n            ' C '\n        ],\n        {\n            A: '#minecraft:wooden_slabs',\n            B: 'kubejs:andesite_machine',\n            C: 'create:piston_extension_pole'\n        }\n    ).id('kubejs:shaped/mechanical_piston')\n\n    event.shaped(\n        Item.of('create:mechanical_press', 1),\n        [\n            ' A ',\n            'DBD',\n            ' C '\n        ],\n        {\n            A: '#forge:saws',\n            B: 'kubejs:andesite_machine',\n            C: 'minecraft:iron_block',\n            D: 'create:shaft'\n        }\n    ).id('kubejs:shaped/mechanical_press')\n\n    event.shaped(\n        Item.of('create:mechanical_mixer', 1),\n        [\n            ' A ',\n            'DBD',\n            ' C '\n        ],\n        {\n            A: '#forge:saws',\n            B: 'kubejs:andesite_machine',\n            C: 'create:whisk',\n            D: 'create:andesite_alloy'\n        }\n    ).id('kubejs:shaped/mechanical_mixer')\n\n    event.shaped(\n        Item.of('vintageimprovements:spring_coiling_machine', 1),\n        [\n            'A  ',\n            'BCD',\n            'A  '\n        ],\n        {\n            A: '#kubejs:aingots',\n            B: 'vintageimprovements:spring_coiling_machine_wheel',\n            C: 'kubejs:andesite_machine',\n            D: 'create:shaft'\n        }\n    ).id('kubejs:shaped/spring_coiling_machine')\n})",
  "server_scripts\\recipes\\main\\compacting.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\compacting.js#recipe2": "event.recipes.create.compacting( 'minecraft:dirt', [Item.of('#forge:seeds', 3), Item.of('#minecraft:saplings', 2), Fluid.of('slideanddice:liquid_fertilizer', 120)]).id('kubejs:compacting/dirt')",
  "server_scripts\\recipes\\main\\compacting.js#recipe3": "event.recipes.create.compacting( [Fluid.of('kubejs:cum', 150), Fluid.of('kubejs:skibidi_fluid', 300)], 'kubejs:fortrens').id('kubejs:cum')",
  "server_scripts\\recipes\\main\\compacting.js#recipe4": "event.recipes.create.compacting(Item.of('kubejs:fortrens', 2), [Fluid.of('tfmg:liquid_plastic', 750), Item.of('tfmg:thermite_grenade', 1)]).id('kubejs:compacting/dildo')",
  "server_scripts\\recipes\\main\\compacting.js#recipe5": "event.recipes.create.compacting('minecrat:ink_sac', Fluid.of('create_enchantment_industry:ink', 275)).id('kubejs:compacting/ink_sac')\n})",
  "server_scripts\\recipes\\main\\crushing.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\crushing.js#recipe2": "event.recipes.create.crushing(\n        [Item.of('kubejs:crushed_deepslate', 1), Item.of('kubejs:crushed_deepslate').withChance(0.5)],\n        Item.of('#forge:deepslate', 1))\n        .processingTime(200).id('kubejs:crushing/crushed_deepslate')",
  "server_scripts\\recipes\\main\\crushing.js#recipe3": "event.recipes.create.crushing([Item.of('kubejs:limestone_shard', 1), Item.of('kubejs:limestone_shard').withChance(0.5)], Item.of('create:limestone', 1))\n        .processingTime(100).id('kubejs:crushing/limestone_shard')",
  "server_scripts\\recipes\\main\\crushing.js#recipe4": "event.recipes.create.crushing([Item.of('tfmg:limesand', 1), Item.of('tfmg:limesand').withChance(0.5)], Item.of('kubejs:limestone_shard', 1)).processingTime(100).id('kubejs:crushing/limesand')\n})",
  "server_scripts\\recipes\\main\\custom_sequences.js#recipe1": "// priority: 1000\n\n    /** @author {omgimanerd} */\n\n    /**\n     * @constructor\n     * @description JS prototype class to make registering Create sequenced assembly\n     * recipes easier.\n     *\n     * Example usage:\n     * new SequencedAssembly(e, 'minecraft:wooden_slabs')\n     *   .deploy('create:andesite_alloy')\n     *   .deploy('create:shaft')\n     *   .press(2)\n     *   .outputs('kubejs:andesite_mechanism')\n     *\n     * @param {Internal.RecipesEventJS} e\n     * @param {InputItem_} input\n     * @param {InputItem_} transitional\n     */\n    //#region SequencedAssembly\n    function SequencedAssembly(e, input, transitional) {\n    this.e_ = e\n    this.input_ = input\n    this.transitional_ = transitional ? transitional : input\n\n    this.loops_ = 1\n    this.steps_ = []\n    this.hasCustomSteps_ = false\n    }\n\n    /**\n     * @param {number} loops\n     * @returns {SequencedAssembly}\n     */\n    SequencedAssembly.prototype.loops = function (loops) {\n    this.loops_ = loops\n    return this\n    }\n\n    /**\n     * @param {number} repeats\n     * @param {number} processingTime\n     * @returns {SequencedAssembly}\n     */\n    SequencedAssembly.prototype.cut = function (repeats, processingTime) {\n    repeats = repeats === undefined ? 1 : repeats\n    this.steps_ = this.steps_.concat(\n        Array(repeats).fill({\n        type: 'cutting',\n        preItemText: 'Next: Cut on a Mechanical Saw',\n        processingTime: processingTime,\n        })\n    )\n    return this\n    }\n\n    /**\n     * @param {number} repeats\n     * @returns {SequencedAssembly}\n     */\n    SequencedAssembly.prototype.press = function (repeats) {\n    repeats = repeats === undefined ? 1 : repeats\n    this.steps_ = this.steps_.concat(\n        Array(repeats).fill({\n        type: 'pressing',\n        preItemText: 'Next: Press with a Mechanical Press',\n        })\n    )\n    return this\n    }\n\n    /**\n     * @param {Internal.InputFluid_|string} fluid\n     * @param {number?} qty_mb\n     * @returns {SequencedAssembly}\n     */\n    SequencedAssembly.prototype.fill = function (fluid, qty_mb) {\n    // 1-argument, Fluid object is provided.\n    // 2-argument, fluid should be a string and qty_mb should be provided.\n    /**\n     * @type {Internal.FluidStackJS}\n     */\n    const f = qty_mb === undefined ? fluid : Fluid.of(fluid, qty_mb)\n    let id = f.id\n    qty_mb = f.amount\n    this.steps_.push({\n        type: 'filling',\n        preItemText: `Next: Fill with ${qty_mb}mb ${id}`,\n        fluid: f,\n    })\n    return this\n    }\n\n    /**\n     * @param {InputItem_|string} item\n     * @param {boolean?} keepHeldItem\n     * @returns {SequencedAssembly}\n     */\n    SequencedAssembly.prototype.deploy = function (item, keepHeldItem) {\n    this.steps_.push({\n        type: 'deploying',\n        preItemText: `Next: Deploy ${item.id}`,\n        item: item,\n        keepHeldItem: !!keepHeldItem,\n    })\n    return this\n    }\n\n    /**\n     * @callback customSequencedAssemblyCallback\n     * @param {InputItem_} pre\n     * @param {OutputItem_[]} post\n     */\n    /**\n     * @param {string} preItemText\n     * @param {customSequencedAssemblyCallback} prePostItemHandler\n     * @returns {SequencedAssembly}\n     */\n    SequencedAssembly.prototype.custom = function (\n    preItemText,\n    prePostItemHandler\n    ) {\n    this.hasCustomSteps_ = true\n    this.steps_.push({\n        type: 'custom',\n        preItemText: preItemText,\n        callback: prePostItemHandler,\n    })\n    return this\n    }\n\n    /**\n     * @private\n     * @param {number} stepNumber\n     * @param {string} loreText\n     * @returns {Internal.Ingredient}\n     */\n    SequencedAssembly.prototype.getCustomTransitionalItem = function (\n    stepNumber,\n    loreText\n    ) {\n    const totalSteps = this.steps_.length * this.loops_\n    const progress = stepNumber / totalSteps\n    return Item.of(this.transitional_, {\n        SequencedAssembly: {\n        Progress: progress,\n        Step: stepNumber,\n        },\n    })\n        .withLore([\n        Text.empty(),\n        Text.gray('Recipe Sequence').italic(false),\n        Text.darkGray(`Progress: ${stepNumber}/${totalSteps}`).italic(false),\n        Text.aqua(loreText).italic(false),\n        Text.empty(),\n        ])\n        .weakNBT()\n    }\n\n    /**\n     * @private\n     * @param {OutputItem_[]} output\n     * @returns {Special.Recipes.SequencedAssemblyCreate}\n     */\n    SequencedAssembly.prototype.outputNativeCreate = function (output) {\n    return this.e_.recipes.create\n        .sequenced_assembly(\n        output,\n        this.input_,\n        this.steps_.map((data) => {\n            switch (data.type) {\n            case 'cutting':\n                const cuttingStep = this.e_.recipes.createCutting(\n                this.transitional_,\n                this.transitional_\n                )\n                if (data.processingTime !== undefined) {\n                cuttingStep.processingTime(data.processingTime)\n                }\n                return cuttingStep\n            case 'pressing':\n                return this.e_.recipes.createPressing(\n                this.transitional_,\n                this.transitional_\n                )\n            case 'filling':\n                return this.e_.recipes.createFilling(this.transitional_, [\n                this.transitional_,\n                data.fluid,\n                ])\n            case 'deploying':\n                const deployingStep = this.e_.recipes.createDeploying(\n                this.transitional_,\n                [this.transitional_, data.item]\n                )\n                if (data.keepHeldItem) deployingStep.keepHeldItem()\n                return deployingStep\n            default:\n                throw new Error(`Unknown assembly step ${data}`)\n            }\n        })\n        )\n        .transitionalItem(this.transitional_)\n        .loops(this.loops_)\n    }\n\n    /**\n     * @private\n     * @param {OutputItem_[]} output\n     * @returns {null}\n     */\n    SequencedAssembly.prototype.outputCustomSequence = function (output) {\n    output = typeof output === 'string' ? [output] : output\n    if (this.input_ === this.transitional_) {\n        console.warn(\n        `Input item ${this.input_} is the same as the transitional item ` +\n            `${this.transitional_}`\n        )\n    }\n\n    const totalSteps = this.steps_.length * this.loops_\n    // Generate and define recipes for each of the steps in the sequence.\n    this.steps_.forEach((data, index) => {\n        for (let loop = 0; loop < this.loops_; ++loop) {\n        const preItemStep = index + loop * this.steps_.length\n        const postItemStep = preItemStep + 1\n        let preItem, postItem\n        // The first and last items in the sequence should be the input and output\n        // items respectively. Otherwise, we form an item with the relevant NBT\n        // data and lore for the input and outputs of the intermediate steps.\n        //\n        // Custom steps must respect the NBT of the pre and post items.\n        if (preItemStep === 0) {\n            preItem = Item.of(this.input_)\n        } else {\n            preItem = this.getCustomTransitionalItem(preItemStep, data.preItemText)\n        }\n        if (postItemStep === totalSteps) {\n            postItem = output\n        } else {\n            postItem = this.getCustomTransitionalItem(\n            postItemStep,\n            this.steps_[index + 1].preItemText\n            )\n        }\n        // Store the recipe in case we need to chain calls to it. Define the\n        // actual recipe with the intermediate items.\n        let r\n        switch (data.type) {\n            case 'cutting':\n            r = this.e_.recipes.create.cutting(postItem, preItem)\n            if (data.processingTime) r.processingTime(data.processingTime)\n            break\n            case 'pressing':\n            r = this.e_.recipes.create.pressing(postItem, preItem)\n            break\n            case 'filling':\n            r = this.e_.recipes.create.filling(postItem, [preItem, data.fluid])\n            break\n            case 'deploying':\n            r = this.e_.recipes.create.deploying(postItem, [preItem, data.item])\n            if (data.keepHeldItem) r.keepHeldItem()\n            break\n            case 'custom':\n            r = data.callback(preItem, postItem)\n            break\n            default:\n            throw new Error(`Unknown type ${data.type}`)\n        }\n        }\n    })\n    return null\n    }\n\n    /**\n     * @param {OutputItem_[]} output\n     * @returns {Special.Recipes.SequencedAssemblyCreate?}\n     */\n    SequencedAssembly.prototype.outputs = function (output) {\n    if (this.hasCustomSteps_) {\n        return this.outputCustomSequence(output)\n    }\n    return this.outputNativeCreate(output)\n    }\n    //#endregion\n    ServerEvents.recipes(event => {\n\n    })",
  "server_scripts\\recipes\\main\\filling.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\filling.js#recipe2": "event.recipes.createFilling('create:brass_casing', ['#forge:stripped_logs', Fluid.of('tconstruct:molten_brass', 90)]).id('kubejs:filling/brass_casing')",
  "server_scripts\\recipes\\main\\filling.js#recipe3": "event.recipes.createFilling('minecraft:glowstone_dust',[Fluid.of('kubejs:glow_solution', 250), Item.of('minecraft:redstone')]).id('kubejs:filling/glowstone_dust')",
  "server_scripts\\recipes\\main\\filling.js#recipe4": "event.recipes.createFilling('create:rose_quartz',[Fluid.of('kubejs:molten_redstone', 630), Item.of('minecraft:quartz')]).id('kubejs:filling/rose_quartz')",
  "server_scripts\\recipes\\main\\filling.js#recipe5": "event.recipes.createFilling('kubejs:cum_bottle', [Fluid.of('kubejs:cum', 250), 'minecraft:glass_bottle']).id('kubejs:filling/cum_bottle')",
  "server_scripts\\recipes\\main\\filling.js#recipe6": "event.recipes.createFilling(Item.of('kubejs:fortrens', 2), [Fluid.of('tfmg:liquid_plastic', 750), Item.of('tfmg:thermite_grenade', 1)]).id('kubejs:filling/dildo')",
  "server_scripts\\recipes\\main\\filling.js#recipe7": "event.recipes.createFilling('createaddition:diamond_grit_sandpaper', [Fluid.of('tconstruct:molten_diamond', 750), 'create:sand_paper']).id('kubejs:filling/diamond_grit_sandpaper')\n})",
  "server_scripts\\recipes\\main\\milling.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\milling.js#recipe2": "event.recipes.create.milling(\n        Item.of('kubejs:crushed_deepslate', 1),\n        Item.of('#forge:deepslate', 1)).id('kubejs:milling/crushed_deepslate')",
  "server_scripts\\recipes\\main\\milling.js#recipe3": "event.recipes.create.milling(\n        Item.of('kubejs:limestone_shard', 1),\n        Item.of('create:limestone', 1)).id('kubejs:milling/limestone_shard')",
  "server_scripts\\recipes\\main\\milling.js#recipe4": "event.recipes.create.milling(\n        Item.of('tfmg:limesand', 1),\n        Item.of('kubejs:limestone_shard', 1)).id('kubejs:milling/limesand')\n})",
  "server_scripts\\recipes\\main\\mixing.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\mixing.js#recipe2": "event.recipes.create.mixing(Fluid.of('tfmg:propane', 1000), [Fluid.of('tfmg:kerosene', 500), Fluid.of('tfmg:gasoline', 350), Fluid.of('tfmg:naphtha', 150)]).id('kubejs:mixing/propane')\n})",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe2": "event.replaceInput({ id: 'tfmg:sequenced_assembly/turbine_engine' }, 'tfmg:screwdriver', '#forge:screwdrivers')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe3": "event.replaceInput({ id: 'tfmg:sequenced_assembly/lpg_engine' }, 'tfmg:screwdriver', '#forge:screwdrivers')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe4": "event.replaceInput({ id: 'tfmg:sequenced_assembly/turbine_engine' }, 'tfmg:screwdriver', '#forge:screwdrivers')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe5": "event.replaceInput({ id: 'tfmg:sequenced_assembly/steel_mechanism' }, 'tfmg:screwdriver', '#forge:screwdrivers')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe6": "event.replaceInput({ id: 'functionalstorage:gold_upgrade' }, 'functionalstorage:copper_upgrade', 'kubejs:brass_machine')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe7": "event.replaceInput({ id: 'functionalstorage:copper_upgrade' }, '#functionalstorage:drawer', 'kubejs:copper_machine')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe8": "event.replaceInput({ id: 'functionalstorage:armory_cabinet' }, 'minecraft:comparator', 'kubejs:brass_machine')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe9": "event.replaceInput({ id: 'create_sa:experience_pickaxe_recipe' }, 'create_sa:zinc_handle', 'vintageimprovements:zinc_rod')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe10": "event.replaceInput({ id: 'create_sa:experience_sword_recipe' }, 'create_sa:zinc_handle', 'vintageimprovements:zinc_rod')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe11": "event.replaceInput({ id: 'create_sa:experience_shovel_recipe' }, 'create_sa:zinc_handle', 'vintageimprovements:zinc_rod')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe12": "event.replaceInput({ id: 'create_sa:experience_axe_recipe' }, 'create_sa:zinc_handle', 'vintageimprovements:zinc_rod')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe13": "event.replaceInput({ id: 'createaddition:crafting/rolling_mill' }, 'create:andesite_machine', 'kubejs:andesite_machine')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe14": "event.replaceInput({ input: 'alexscaves:limestone' }, 'alexscaves:limestone', 'create:limestone')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe15": "event.replaceInput({ input: 'quark:limestone' }, 'quark:limestone', 'create:limestone')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe16": "event.replaceOutput({ output: 'alexscaves:limestone' }, 'alexscaves:limestone', 'create:limestone')",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe17": "event.replaceOutput({ output: 'quark:limestone' }, 'quark:limestone', 'create:limestone')\n    let sids = [\n        'tfmg:crafting/diesel_engine_expansion',\n        'tfmg:mechanical_crafting/surface_scanner',\n        'tfmg:mechanical_crafting/diesel_engine',\n        'tfmg:mechanical_crafting/large_radial_engine',\n        'tfmg:mechanical_crafting/radial_engine',\n        'tfmg:mechanical_crafting/steel_distillation_controller',\n        'tfmg:mechanical_crafting/engine_base'\n\n    ]\n    sids.forEach((id) => {",
  "server_scripts\\recipes\\main\\modify_recipes.js#recipe18": "event.replaceInput({ id: id }, 'tfmg:heavy_machinery_casing', 'kubejs:steel_machine')\n    })\n})",
  "server_scripts\\recipes\\main\\remove_recipes.js#recipe1": "ServerEvents.recipes(event => {\n    let recipeIds = [\n        'vintageimprovements:pressurizing/sulfuric_acid',\n        'vintageimprovements:pressurizing/copper_sulfate',\n        'tfmg:mixing/sulfuric_acid',\n        'createaddition:mixing/netherrack',\n        'create_sa:netherrack_recipe',\n        'tfmg:mixing/zinc_sulfate',\n        'tfmg:mixing/copper_sulfate',\n        'create:mixing/brass_ingot',\n        'create:crafting/materials/electron_tube',\n        'tconstruct:smeltery/alloys/molten_brass',\n        'tconstruct:smeltery/entity_melting/bee',\n        'tconstruct:smeltery/melting/slime/honey_block',\n        'create:item_application/brass_casing_from_log_using_deployer',\n        'create:item_application/brass_casing_from_wood_using_deployer',\n        'create:item_application/brass_casing_from_wood',\n        'create:item_application/brass_casing_from_log',\n        'create:item_application/brass_casing_from_log_using_deployer',\n        'create:crafting/materials/rose_quartz',\n        'createaddition:crafting/redstone_relay',\n        'createaddition:crafting/small_connector_copper',\n        'createaddition:crafting/festive_spool',\n        'createaddition:crafting/electrum_spool',\n        'createaddition:crafting/gold_spool',\n        'createaddition:crafting/copper_spool',\n        'createaddition:crafting/spool',\n        'createaddition:crafting/small_light_connector',\n        'tfmg:crafting/electric_casing',\n        'tfmg:casting/steel',\n        'tfmg:casting/amogus',\n        'createaddition:crafting/portable_energy_interface',\n        'create:crafting/kinetics/encased_fan',\n        'create:crafting/kinetics/millstone',\n        'create:crafting/kinetics/mechanical_press',\n        'create:crafting/kinetics/mechanical_mixer',\n        'create:crafting/kinetics/rope_pulley',\n        'create:crafting/kinetics/mechanical_drill',\n        'create:crafting/kinetics/mechanical_saw',\n        'create:crafting/kinetics/deployer',\n        'create:crafting/kinetics/portable_storage_interface',\n        'create:crafting/kinetics/mechanical_piston',\n        'create:crafting/kinetics/mechanical_bearing',\n        'create:crafting/kinetics/windmill_bearing',\n        'create:crafting/kinetics/gantry_carriage',\n        'create:crafting/kinetics/sticker',\n        'supplementaries:rope',\n        'farmersdelight:rope',\n        'create:crafting/kinetics/cuckoo_clock',\n        'create:crafting/kinetics/large_water_wheel',\n        'create:crafting/kinetics/gearbox',\n        'create:crafting/kinetics/gearboxfrom_conversion',\n        'create:crafting/kinetics/vertical_gearboxfrom_conversion',\n        'create:crafting/kinetics/vertical_gearbox',\n        'create:crafting/logistics/andesite_tunnel',\n        'create:crafting/logistics/andesite_funnel',\n        'create:pressing/sugar_cane',\n        'tconstruct:smeltery/melting/metal/steel/ingot',\n        'tconstruct:smeltery/melting/metal/steel/block',\n        'tconstruct:smeltery/melting/metal/steel/nugget',\n        'tconstruct:smeltery/melting/metal/steel/plates',\n        'tconstruct:smeltery/melting/metal/steel/rod',\n        'tconstruct:smeltery/melting/metal/steel/wire',\n        'tconstruct:tools/materials/melting/steel',\n        'tfmg:crushing/limesand',\n        'functionalstorage:fluid_1',\n        'functionalstorage:fluid_2',\n        'functionalstorage:fluid_4',\n        'functionalstorage:compacting_drawer',\n        'functionalstorage:compacting_framed_drawer',\n        'functionalstorage:simple_compacting_drawer',\n        'functionalstorage:framed_simple_compacting_drawer',\n        'functionalstorage:ender_drawer',\n        'functionalstorage:netherite_upgrade',\n        'functionalstorage:diamond_upgrade',\n        'functionalstorage:void_upgrade',\n        'functionalstorage:controller_extension',\n        'functionalstorage:framed_controller_extension',\n        'functionalstorage:storage_controller',\n        'functionalstorage:framed_storage_controller',\n        'vintageimprovements:craft/spring_coiling_machine',\n        'tfmg:crafting/copycat_cable_block',\n        'tfmg:crafting/copper_wire_plastic',\n        'tfmg:crafting/copper_wire',\n        'create_sa:zinc_handle_recipe',\n        'create_sa:brass_drill_head_recipe',\n        'tfmg:sequenced_assembly/steel_mechanism',\n        'tfmg:sequenced_assembly/turbine_engine',\n        'tfmg:sequenced_assembly/gasoline_engine',\n        'tfmg:sequenced_assembly/lpg_engine',\n        'tfmg:crafting/casting_spout',\n        'createaddition:crafting/diamond_grit_sandpaper',\n        'tconstruct:smeltery/alloys/molten_manyullyn',\n        'functionalstorage:linking_tool',\n        'functionalstorage:configuration_tool',\n        'tfmg:polarizing/magnetic_ingot',\n        'tfmg:milling/limesand',\n        'create_dd:crafting/kinetics/kinetic_motor',\n        'create_dd:crafting/fan_catalyst/splashing_sail',\n        'create_dd:crafting/fan_catalyst/haunting_sail',\n        'create_dd:crafting/fan_catalyst/smoking_sail',\n        'create_dd:crafting/fan_catalyst/blasting_sail',\n        'create_dd:crafting/fan_catalyst/freezing_sail',\n        'create_dd:crafting/fan_catalyst/sanding_sail'\n    ]\n    \n    let recipeOutputs = [\n        'create_sa:brass_jetpack_chestplate',\n        'create_sa:copper_jetpack_chestplate',\n        'create_sa:andesite_jetpack_chestplate',\n        'create_sa:netherite_jetpack_chestplate',\n        'minecraft:elytra',\n        'tconstruct:slime_chestplate',\n        'createaddition:capacitor',\n        'createaddition:tesla_coil',\n        'createaddition:accumulator',\n        'createaddition:alternator',\n        'createaddition:electric_motor',\n        'createaddition:large_connector',\n    ]\n    \n    let recipeInputs = [];\n    \n    recipeIds.forEach(id => {",
  "server_scripts\\recipes\\main\\remove_recipes.js#recipe2": "event.remove({ id: id });\n    })\n    \n    recipeOutputs.forEach(output => {",
  "server_scripts\\recipes\\main\\remove_recipes.js#recipe3": "event.remove({ output: output });\n    })\n    \n    recipeInputs.forEach(input => {",
  "server_scripts\\recipes\\main\\remove_recipes.js#recipe4": "event.remove({ input: input });\n    })\n    let removeTFMGItems = [\n        'stator', 'electric_post', 'electric_diode', 'resistor', 'copper_coil','electric_pump', 'diagonal_cable_block', 'cable_tube', 'neon_tube', 'copper_cable_hub', \n        'steel_cable_hub', 'aluminum_cable_hub', 'copper_cable_hub', 'steel_casing_cable_hub', 'heavy_cable_hub', 'voltmeter', 'cable_connector', 'energy_meter',\n        'traffic_light', 'voltage_observer', 'light_bulb', 'rgb_light_bulb', 'brass_cable_hub', 'segmented_display', 'fuse_block', 'capacitor', 'accumulator', 'polarizer',\n        'transistor', 'converter', 'generator', 'rotor', 'electric_motor', 'galvanic_cell']\n    removeTFMGItems.forEach(item => {",
  "server_scripts\\recipes\\main\\remove_recipes.js#recipe5": "event.remove({output: 'tfmg:' + item})\n    })\n})",
  "server_scripts\\recipes\\main\\shaped.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\shaped.js#recipe2": "event.shaped(\n        Item.of('kubejs:andesite_machine', 1),\n        [\n            'ABA',\n            'CDC',\n            'AEA'\n        ],\n        {\n            A: '#kubejs:anuggets',\n            B: '#forge:saws',\n            C: 'minecraft:stick',\n            D: 'create:andesite_casing',\n            E: 'create:cogwheel'\n        }\n    ).damageIngredient('#forge:saws', '5').id('kubejs:shaped/andesite_machine')",
  "server_scripts\\recipes\\main\\shaped.js#recipe3": "event.shaped(\n        Item.of('kubejs:saw', 1),\n        [\n            '   ',\n            'ABC',\n            '   '\n        ],\n        {\n            A: '#minecraft:planks',\n            B: '#kubejs:aingots',\n            C: '#kubejs:anuggets'\n        }\n    ).id('kubejs:shaped/saw')",
  "server_scripts\\recipes\\main\\shaped.js#recipe4": "event.shaped(\n        Item.of('kubejs:screwdriver', 1),\n        [\n            '   ',\n            'ABC',\n            '   '\n        ],\n        {\n            A: 'kubejs:deepslate_alloy',\n            B: 'vintageimprovements:aluminum_rod',\n            C: 'vintageimprovements:aluminum_rod'\n        }\n    ).id('kubejs:shaped/screwdriver')",
  "server_scripts\\recipes\\main\\shaped.js#recipe5": "event.shaped(\n        Item.of('kubejs:saw_blade', 1),\n        [\n            'BCB',\n            'CAC',\n            'BCB'\n        ],\n        {\n            A: 'create:iron_sheet',\n            B: '#kubejs:anuggets',\n            C: 'create:andesite_alloy'\n        }\n    ).id('kubejs:shaped/saw_blade')",
  "server_scripts\\recipes\\main\\shaped.js#recipe6": "event.shaped(\n        Item.of('kubejs:drill_head', 1),\n        [\n            ' C ',\n            'CBC',\n            'BAB'\n        ],\n        {\n            A: 'create:iron_sheet',\n            B: '#kubejs:anuggets',\n            C: 'create:andesite_alloy'\n        }\n    ).id('kubejs:shaped/drill_head')\n})",
  "server_scripts\\recipes\\main\\shapeless.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\shapeless.js#recipe2": "event.shapeless(Item.of('farmersdelight:rope', 3), ['supplementaries:flax', 'supplementaries:flax', 'supplementaries:flax']).id('kubejs:shapeless/rope')\n})",
  "server_scripts\\recipes\\main\\smelting.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\smelting.js#recipe2": "event.smelting('minecraft:lime_dye', 'minecraft:sugar_cane').xp(0.1).id('kubejs:smelting/lime_dye')\n})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe1": "ServerEvents.recipes(event => {",
  "server_scripts\\recipes\\main\\tinkers.js#recipe2": "event.custom({\n\t\t\"type\": \"tconstruct:melting\",\n\t\t\"ingredient\": {\n\t\t\t\"item\": 'minecraft:redstone_block'\n\t\t},\n\t\t\"result\": {\n\t\t\t\"fluid\": 'kubejs:molten_redstone',\n\t\t\t\"amount\": 900\n\t\t},\n\t\t\"temperature\": 500,\n\t\t\"time\": 90\n\t}).id('kubejs:melting/redstone_block')",
  "server_scripts\\recipes\\main\\tinkers.js#recipe3": "event.custom({\n\t\t\"type\": \"tconstruct:melting\",\n\t\t\"ingredient\": {\n\t\t\t\"item\": 'minecraft:redstone'\n\t\t},\n\t\t\"result\": {\n\t\t\t\"fluid\": 'kubejs:molten_redstone',\n\t\t\t\"amount\": 100\n\t\t},\n\t\t\"temperature\": 500,\n\t\t\"time\": 10\n\t}).id('kubejs:melting/redstone')",
  "server_scripts\\recipes\\main\\tinkers.js#recipe4": "event.custom({\n\t\t\"type\": \"tconstruct:alloy\",\n\t\t\"inputs\": [\n            { 'fluid': 'tconstruct:molten_zinc', 'amount':90 },\n            { 'fluid': 'tconstruct:molten_copper', 'amount':180 }\n        ],\n\t\t\"result\": {\n\t\t\t\"fluid\": 'tconstruct:molten_brass',\n\t\t\t\"amount\": 270\n\t\t},\n\t\t\"temperature\": 400,\n\t\t\"time\": 80\n\t}).id('kubejs:alloy/brass')",
  "server_scripts\\recipes\\main\\tinkers.js#recipe5": "event.custom({\n\t\t\"type\": \"tconstruct:alloy\",\n\t\t\"inputs\": [\n            { 'fluid': 'tconstruct:molten_cobalt', 'amount':180 },\n            { 'fluid': 'tconstruct:molten_debris', 'amount':90 }\n        ],\n\t\t\"result\": {\n\t\t\t\"fluid\": 'tconstruct:molten_manyullyn',\n\t\t\t\"amount\": 270\n\t\t},\n\t\t\"temperature\": 1800,\n\t\t\"time\": 210\n\t}).id('kubejs:alloy/manyullyn')",
  "server_scripts\\recipes\\main\\tinkers.js#recipe6": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:cooling_fluid\",\n\t\t\t\"amount\": 300\n\t\t},\n\t\t\"duration\": 100,\n\t\t\"temperature\": -200,\n\t\t\"rate\": 8\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe7": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"createaddition:bioethanol\",\n\t\t\t\"amount\": 350\n\t\t},\n\t\t\"duration\": 500,\n\t\t\"temperature\": 1500,\n\t\t\"rate\": 12\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe8": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:kerosene\",\n\t\t\t\"amount\": 200\n\t\t},\n\t\t\"duration\": 650,\n\t\t\"temperature\": 1200,\n\t\t\"rate\": 12\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe9": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:lpg\",\n\t\t\t\"amount\": 250\n\t\t},\n\t\t\"duration\": 400,\n\t\t\"temperature\": 800,\n\t\t\"rate\": 10\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe10": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:gasoline\",\n\t\t\t\"amount\": 300\n\t\t},\n\t\t\"duration\": 300,\n\t\t\"temperature\": 1400,\n\t\t\"rate\": 13\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe11": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:diesel\",\n\t\t\t\"amount\": 400\n\t\t},\n\t\t\"duration\": 200,\n\t\t\"temperature\": 800,\n\t\t\"rate\": 11\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe12": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:propane\",\n\t\t\t\"amount\": 500\n\t\t},\n\t\t\"duration\": 550,\n\t\t\"temperature\": 1900,\n\t\t\"rate\": 17\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe13": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:creosote\",\n\t\t\t\"amount\": 300\n\t\t},\n\t\t\"duration\": 400,\n\t\t\"temperature\": 1200,\n\t\t\"rate\": 11\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe14": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:napalm\",\n\t\t\t\"amount\": 250\n\t\t},\n\t\t\"duration\": 350,\n\t\t\"temperature\": 1800,\n\t\t\"rate\": 14\n\t})",
  "server_scripts\\recipes\\main\\tinkers.js#recipe15": "event.custom({\n\t\t\"type\": \"tconstruct:melting_fuel\",\n\t\t\"fluid\": {\n\t\t\t\"name\": \"tfmg:naphtha\",\n\t\t\t\"amount\": 300\n\t\t},\n\t\t\"duration\": 300,\n\t\t\"temperature\": 1300,\n\t\t\"rate\": 10\n\t})\n})",
  "server_scripts\\recipes\\steelAge\\sequences.js": "ServerEvents.recipes(event => {\n    let inter = Item.of('tfmg:unfinished_steel_mechanism')\n    event.recipes.create.sequenced_assembly(\n        [\n            Item.of('tfmg:steel_mechanism'),\n            Item.of('tfmg:heavy_plate').withChance(0.08),\n            Item.of('tfmg:steel_ingot').withChance(0.08),\n            Item.of('tfmg:aluminum_ingot').withChance(0.05),\n            Item.of('tfmg:industrial_pipe').withChance(0.03)\n        ],\n        Item.of('tfmg:heavy_plate'),\n        [\n            event.recipes.create.deploying(inter, [inter, Ingredient.of('#forge:ingots/steel')]),\n            event.recipes.create.deploying(inter, [inter, Ingredient.of('#forge:ingots/aluminum')]),\n            event.recipes.create.deploying(inter, [inter, 'tfmg:screw']),\n            event.recipes.create.deploying(inter, [inter, '#forge:screwdrivers'])\n        ]\n    ).transitionalItem(inter)\n    .loops(1)\n    .id('kubejs:sequence/steel_mechanism')\n\n    // Turbine Engine Recipe\n    let interTurbine = Item.of('tfmg:unfinished_turbine_engine')\n    event.recipes.create.sequenced_assembly(\n        [\n            Item.of('tfmg:turbine_engine', 2)\n        ],\n        Ingredient.of('tfmg:engine_base'),\n        [\n            event.recipes.create.deploying(interTurbine, [interTurbine, Ingredient.of('tfmg:turbine_blade')]),\n            event.recipes.create.deploying(interTurbine, [interTurbine, Ingredient.of('tfmg:screw')]),\n            event.recipes.create.deploying(interTurbine, [interTurbine, Ingredient.of('#forge:screwdrivers')]),\n            event.recipes.create.filling(interTurbine, [interTurbine, Fluid.of('tfmg:lubrication_oil', 1000)]),\n            event.recipes.create.deploying(interTurbine, [interTurbine, Ingredient.of('tfmg:steel_mechanism')])\n        ]\n    )\n    .transitionalItem(interTurbine)\n    .loops(6)\n    .id('kubejs:sequence/turbine_engine')\n\n    // LPG Engine Recipe\n    let interLpg = Item.of('tfmg:unfinished_lpg_engine')\n    event.recipes.create.sequenced_assembly(\n        [\n            Item.of('tfmg:lpg_engine', 2)\n        ],\n        Ingredient.of('tfmg:engine_base'),\n        [\n            event.recipes.create.deploying(interLpg, [interLpg, Ingredient.of('tfmg:engine_chamber')]),\n            event.recipes.create.deploying(interLpg, [interLpg, Ingredient.of('tfmg:screw')]),\n            event.recipes.create.deploying(interLpg, [interLpg, Ingredient.of('#forge:screwdrivers')]),\n            event.recipes.create.filling(interLpg, [interLpg, Fluid.of('tfmg:lubrication_oil', 1000)])\n        ]\n    )\n    .transitionalItem(interLpg)\n    .loops(8)\n    .id('kubejs:sequence/lpg_engine')\n\n    // Gasoline Engine Recipe\n    let interGas = Item.of('tfmg:unfinished_gasoline_engine')\n    event.recipes.create.sequenced_assembly(\n        [\n            Item.of('tfmg:gasoline_engine', 2)\n        ],\n        Ingredient.of('tfmg:engine_base'),\n        [\n            event.recipes.create.filling(interGas, [interGas, Fluid.of('tfmg:lubrication_oil', 1000)]),\n            event.recipes.create.deploying(interGas, [interGas, Ingredient.of('tfmg:engine_chamber')]),\n            event.recipes.create.deploying(interGas, [interGas, Ingredient.of('tfmg:screw')]),\n            event.recipes.create.deploying(interGas, [interGas, Ingredient.of('#forge:screwdrivers')])\n        ]\n    )\n    .transitionalItem(interGas)\n    .loops(8)\n    .id('kubejs:sequence/gasoline_engine')\n})",
  "server_scripts\\recipes\\steelAge\\steel_machine.js": "ServerEvents.recipes(event => {\n    let inter = 'kubejs:steel_machine'\n    let inter2 = 'tfmg:heavy_machinery_casing'\n    event.recipes.create.sequenced_assembly(\n        Item.of('kubejs:steel_machine', 1),\n        Item.of('tfmg:heavy_machinery_casing', 1),\n        [event.recipes.createDeploying(inter2, [inter2, 'tfmg:steel_mechanism']),\n        event.recipes.createDeploying(inter2, [inter2, 'create:electron_tube']),\n        event.recipes.createFilling(inter2, [inter2, Fluid.of('tfmg:molten_slag', 40)]),\n        event.recipes.createDeploying(inter, [inter, 'tfmg:turbine_blade']),\n        event.recipes.createDeploying(inter, [inter, '#forge:screwdrivers'])])\n    .transitionalItem(inter2).loops(1).id('kubejs:sequence/steel_machine')\n})"
}